# Generated by Django 4.1.1 on 2023-03-06 11:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('full_names', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('location', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.CharField(max_length=1000)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Fruits', 'Fruits'), ('Foods', 'Foods'), ('Drinks', 'Drinks')], default='Foods', max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DrinksCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drink_name', models.CharField(choices=[('Soft Drinks', 'Soft Drinks'), ('Drink', 'Drink'), ('Cocktail', 'Cocktail')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='FruitssCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(choices=[('Fruits', 'Fruits'), ('Juices', 'Juices'), ('Fruit Salad', 'Fruit Salad')], default='Fruits', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PricessCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(choices=[('Normal', 'Normal'), ('Advanced', 'Advanced'), ('VIP', 'VIP')], default='Normal', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='whishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField()),
                ('item_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OrderCheckout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('category', models.IntegerField()),
                ('order_amount', models.IntegerField()),
                ('order_status', models.CharField(choices=[('Delivered', 'Delivered'), ('Pending', 'Pending')], default='Pending', max_length=200)),
                ('delivery_location', models.CharField(max_length=700)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('order_price', models.IntegerField()),
                ('order_made_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.IntegerField()),
                ('category', models.IntegerField()),
                ('order_count', models.IntegerField()),
                ('order_price', models.IntegerField()),
                ('order_added_on', models.DateTimeField(auto_now_add=True)),
                ('order_made_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fruits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('image', models.CharField(max_length=700)),
                ('description', models.TextField()),
                ('price', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.categorie')),
                ('in_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.fruitsscategorie')),
                ('price_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.pricesscategorie')),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('image', models.CharField(max_length=700)),
                ('description', models.TextField()),
                ('price', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.categorie')),
            ],
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('price', models.IntegerField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.categorie')),
                ('drink_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.drinkscategorie')),
            ],
        ),
        migrations.CreateModel(
            name='CockTail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cocktail_name', models.CharField(max_length=200)),
                ('cocktail_image', models.CharField(max_length=500)),
                ('cocktail_description', models.TextField()),
                ('cocktail_price', models.IntegerField()),
                ('cocktail_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.categorie')),
            ],
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_items', models.CharField(max_length=1000)),
                ('order_total_price', models.IntegerField()),
                ('delivery_location', models.CharField(max_length=700)),
                ('orderer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
